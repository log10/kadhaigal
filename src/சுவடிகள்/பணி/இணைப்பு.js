const தொடு_முனை = 'தொடு_முனை'
const இலக்கு_முனை = 'இலக்கு_முனை'
const முனைகள் = {
    '_': தொடு_முனை,
    '-': இலக்கு_முனை

};

export const இணைப்பு_பணி = {
    உருவாக்கு: () => {
        let இணைப்புகள் = document.querySelectorAll(".இணைப்பு");
        let இணைப்புகளின்_கோப்பு = {}
        இணைப்புகள்.forEach(இணைப்பு => {
            if(இணைப்பு.attributes["இணைப்பு"]) {
                let பெயர் = இணைப்பு.attributes["இணைப்பு"].value;
                let முனை = பெயர்[பெயர்.length - 1];
                பெயர் = பெயர்.substring(0, பெயர்.length - 1);
                இணைப்புகளின்_கோப்பு[பெயர்] = இணைப்புகளின்_கோப்பு[பெயர்] || {};
                இணைப்புகளின்_கோப்பு[பெயர்][முனைகள்[முனை]] = இணைப்பு;
            } else if(இணைப்பு.attributes["வெளி_இணைப்பு"].value){
                இணைப்பு.addEventListener('click', வினை => {
                    window.location.href = window.location.href.split('#')[0] + '#' + இணைப்பு.attributes["வெளி_இணைப்பு"].value;
                });
            }
        });
        let நடுப்புள்ளி = சொல்லிடம் => {
            let பக்கவுயரம் = document.scrollingElement.scrollHeight;
            let திரையுயரம் = window.screen.availHeight;
            திரையுயரம் -= திரையுயரம் * 0.15;
            if(சொல்லிடம் < பக்கவுயரம் - திரையுயரம்) {
                சொல்லிடம் -= திரையுயரம் * 0.18;
            }
            return சொல்லிடம்;
        }
        let இணை = (பெயர், முதல், முடிவு) => {
            if(இணைப்புகளின்_கோப்பு[பெயர்][முதல்] && இணைப்புகளின்_கோப்பு[பெயர்][முடிவு]) {
                இணைப்புகளின்_கோப்பு[பெயர்][முதல்].addEventListener('click', வினை => {
                    window.scrollTo({
                        top: நடுப்புள்ளி(இணைப்புகளின்_கோப்பு[பெயர்][முடிவு].offsetTop),
                        left:0,
                        behavior: 'auto'
                    });
                });
            }
        };
        Object.keys(இணைப்புகளின்_கோப்பு).forEach(பெயர் => {
            இணை(பெயர், தொடு_முனை, இலக்கு_முனை);
            இணை(பெயர், இலக்கு_முனை, தொடு_முனை);
        });
    }
};